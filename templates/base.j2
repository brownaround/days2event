<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{% block title %}{% endblock %}</title>
  <meta name="description" content="{% block description %}{% endblock %}" />
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <nav class="navbar">
    <div class="nav-container">
      <a href="index.html" class="logo">🥳 Days2Event</a>
      <ul class="nav-links" id="navLinks">
        <li><a href="index.html">🏠 Home</a></li>
        <li><a href="multi.html">✨ Multi-Genre</a></li>
        <li><a href="edm.html">🪩 EDM</a></li>
        <li><a href="pop.html">🎶 POP</a></li>
        <li><a href="k-pop.html">🇰🇷🎵 K-POP</a></li>
        <li><a href="pride.html">🏳️‍🌈 PRIDE</a></li>
        <li><a href="by-region.html">📍 By Region</a></li>
      </ul>
      <span id="hamburger" class="hamburger">&#9776;</span>
    </div>
  </nav>

  {% block hero %}{% endblock %}
  {% block browse_btn %}{% endblock %}
  {% block content %}{% endblock %}

  <footer style="text-align:center; margin: 2rem 0 1.5rem 0; color:#aaa; font-size:.96rem;">
    &copy; 2025 Days2Event. All rights reserved.
  </footer>

<script>
  // 모바일 햄버거 메뉴 토글
  const hamburger = document.getElementById('hamburger');
  const navLinks = document.getElementById('navLinks');

  hamburger.addEventListener('click', () => {
    navLinks.classList.toggle('show');
  });

  navLinks.querySelectorAll('a').forEach(link => {
    link.addEventListener('click', () => {
      navLinks.classList.remove('show');
    });
  });

  // 모든 How many days left? 버튼에 이벤트 등록
  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('.reveal-btn');
    buttons.forEach(btn => {
      btn.addEventListener('click', () => {
        // 클릭한 버튼에 가장 가까운 카드(event-card) 찾기
        const card = btn.closest('.event-card');
        if (!card) {
          alert("Event card not found.");
          return;
        }

        const startDateStr = card.getAttribute('data-start-date');
        const endDateStr = card.getAttribute('data-end-date');
        if (!startDateStr || !endDateStr) {
          alert("Start or end date not specified.");
          return;
        }

        const startDate = new Date(startDateStr);
        const endDate = new Date(endDateStr);
        const today = new Date();

        const diffTimeStart = startDate - today;
        const diffDaysStart = Math.ceil(diffTimeStart / (1000 * 60 * 60 * 24));

        const diffTimeEnd = endDate - today;
        const diffDaysEnd = Math.ceil(diffTimeEnd / (1000 * 60 * 60 * 24));

        let message;

        if (diffDaysStart > 0) {
          // 행사 시작 전
          message = `${diffDaysStart} days left!`;
        } else if (diffDaysStart <= 0 && diffDaysEnd >= 0) {
          // 행사 중
          const dayNum = Math.abs(diffDaysStart) + 1;
          const suffixes = ["st", "nd", "rd"];
          const suffix = suffixes[(dayNum - 1) < 3 ? (dayNum - 1) : 3] || "th";
          message = `${dayNum}${suffix} day 🎉`;
        } else {
          // 행사 종료 후
          message = `Passed 😥`;
        }

        // 애니메이션 효과용 처리
        const countdownDiv = card.querySelector('.countdown');
        if (!countdownDiv) return;

        // 원래 버튼 텍스트 저장
        const originalText = btn.textContent;

        // 버튼 텍스트 바꾸기
        btn.textContent = message;

        // countdown div에 메시지 넣고 fade-in 스타일 적용
        countdownDiv.textContent = message;
        countdownDiv.classList.remove('hidden');
        countdownDiv.classList.add('fade-in');

        // 3초 후 원래 상태로 복원
        setTimeout(() => {
          btn.textContent = originalText;
          countdownDiv.classList.remove('fade-in');
          countdownDiv.classList.add('hidden');
          countdownDiv.textContent = '';
        }, 3000);
      });
    });
  });

  // Browse Events 스크롤 다운 함수
  function scrollToEvents() {
    const eventsSection = document.getElementById('events');
    if (eventsSection) {
      eventsSection.scrollIntoView({ behavior: 'smooth' });
    }
  }

  // 검색 필터 함수
  function filterCards() {
    const input = document.getElementById('searchInput');
    const filter = input.value.toLowerCase();
    const cards = document.querySelectorAll('.event-card');

    cards.forEach(card => {
      const text = card.textContent.toLowerCase();
      card.style.display = text.includes(filter) ? '' : 'none';
    });
  }
</script>
</body>
</html>
