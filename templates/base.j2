<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{% block title %}{% endblock %}</title>
  <meta name="description" content="{% block description %}{% endblock %}" />
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <nav class="navbar">
    <div class="nav-container">
      <a href="index.html" class="logo">🥳 Days2Event</a>
      <ul class="nav-links" id="navLinks">
        <li><a href="index.html">🏠 Home</a></li>
        <li><a href="multi.html">✨ Multi-Genre</a></li>
        <li><a href="edm.html">🪩 EDM</a></li>
        <li><a href="pop.html">🎶 POP</a></li>
        <li><a href="k-pop.html">🇰🇷🎵 K-POP</a></li>
        <li><a href="pride.html">🏳️‍🌈 PRIDE</a></li>
        <li><a href="by-region.html">📍 By Region</a></li>
      </ul>
      <span id="hamburger" class="hamburger">&#9776;</span>
    </div>
  </nav>

  {% block hero %}{% endblock %}
  {% block browse_btn %}{% endblock %}
  {% block search %}
    <div class="hero-search">
      <input id="searchInput" onkeyup="filterCards()" placeholder="🔍 Search interested event" type="text" />
    </div>
  {% endblock %}
  {% block content %}{% endblock %}

  <footer style="text-align:center; margin: 2rem 0 1.5rem 0; color:#aaa; font-size:.96rem;">
    &copy; 2025 Days2Event. All rights reserved.
  </footer>

<script>
  // 모바일 햄버거 메뉴 토글
  const hamburger = document.getElementById('hamburger');
  const navLinks = document.getElementById('navLinks');

  hamburger.addEventListener('click', () => {
    navLinks.classList.toggle('show');
  });

  navLinks.querySelectorAll('a').forEach(link => {
    link.addEventListener('click', () => {
      navLinks.classList.remove('show');
    });
  });

  // How many days left? 버튼 클릭 처리
  document.addEventListener('DOMContentLoaded', () => {
    const btn = document.querySelector('.reveal-btn');
    if (btn) {
      btn.addEventListener('click', () => {
        // 버튼이 속한 카드(event-card) 찾기
        let card = btn.closest('.event-card');
        if (!card) {
          alert("Event card not found.");
          return;
        }

        // 시작 날짜 가져오기 (data-start-date 속성으로 가정)
        const startDateStr = card.getAttribute('data-start-date');
        if (!startDateStr) {
          alert("Start date not specified.");
          return;
        }

        const startDate = new Date(startDateStr);
        const today = new Date();

        // 날짜 차이 (밀리초)
        const diffTime = startDate - today;
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

        let message;
        if (diffDays > 0) {
          message = `${diffDays} days left!`;
        } else if (diffDays === 0) {
          message = `Today!`;
        } else {
          message = `Passed`;
        }

        alert(message);
      });
    }
  });

  // 검색창 필터링 함수
  function filterCards() {
    const input = document.getElementById('searchInput');
    const filter = input.value.toLowerCase();
    const cards = document.querySelectorAll('.event-card');

    cards.forEach(card => {
      const text = card.textContent.toLowerCase();
      card.style.display = text.includes(filter) ? '' : 'none';
    });
  }
</script>

</body>
</html>