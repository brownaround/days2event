{% extends "base.html" %}
{% block head %}
<link rel="stylesheet" href="style.css" />
{% endblock %}
{% block content %}
<nav class="navbar">
  <div class="nav-container">
    <div class="logo" onclick="showHome()">🎉 Days2Event</div>
    <div class="hamburger" onclick="toggleMenu()">☰</div>
    <ul class="nav-links" id="navMenu">
      <li><a href="#" data-filter="all" class="active">🏠 Home</a></li>
      <li><a href="#" data-filter="multi-genre">✨ Multi-Genre</a></li>
      <li><a href="#" data-filter="genre" data-value="EDM">🪩 EDM</a></li>
      <li><a href="#" data-filter="genre" data-value="POP">🎶 POP</a></li>
      <li><a href="#" data-filter="genre" data-value="K-POP">🇰🇷🎵 K-POP</a></li>
      <li><a href="#" data-filter="genre" data-value="PRIDE">🏳️‍🌈 PRIDE</a></li>
      <li><a href="#" data-filter="region">📍 By Region</a></li>
    </ul>
  </div>
</nav>

<header class="hero" id="hero-section">
  <h1>{{ hero_title or "🌟 Your Festival Countdown Starts Here!" }}</h1>
  <p>{{ hero_subtitle or "From Coachella to Tomorrowland – track how many days are left until the music starts!" }}</p>
  <a href="#events" class="cta-btn">👇🏼 Browse Festivals</a>
</header>

{% if current_page in ['pop', 'kpop', 'region'] %}
<div class="tab-menu" id="tabMenu" style="padding: 0 2rem;">
  {% if current_page == 'pop' %}
  <button class="tab-btn active" data-tab="pop">🎶 POP Artists</button>
  {% elif current_page == 'kpop' %}
  <button class="tab-btn active" data-tab="kpop">🇰🇷🎵 K-POP Artists</button>
  {% elif current_page == 'region' %}
  <button class="tab-btn active" data-tab="region">📍 Regions</button>
  {% endif %}
</div>

<div class="tab-content active" id="{{ current_page }}" style="padding: 0 2rem;">
  <ul>
    {% if current_page == 'pop' %}
      {% for artist in genre_artists.get('POP', []) %}
      <li>{{ artist }}</li>
      {% endfor %}
    {% elif current_page == 'kpop' %}
      {% for artist in genre_artists.get('K-POP', []) %}
      <li>{{ artist }}</li>
      {% endfor %}
    {% elif current_page == 'region' %}
      {% for region in region_groups.keys() %}
      <li>{{ region }}</li>
      {% endfor %}
    {% endif %}
  </ul>
</div>
{% endif %}

<main class="events" id="events">
  {% for event in events %}
  <div class="event-card"
       data-genre="{{ event['Genre'] }}"
       data-region="{{ event['Region'] }}"
       data-artist="{{ event['Artist'] }}"
       data-date="{{ event['Start Date'] }}"
       data-multi-genre="{{ 'yes' if ',' in event['Genre'] else 'no' }}">
    <h2>{{ event['Festival Name'] }}</h2>
    <p>
      {{ countryToEmoji(event['Country']) }} {{ event['Start Date']|formatDateRange(event['End Date']) }} · {{ event['City'] }}
    </p>
    <div class="countdown-wrapper">
      <button class="reveal-btn">⏳ How many days left?</button>
      <div class="countdown hidden">⏳ <strong>Loading...</strong></div>
    </div>
    <a href="{{ event['Link'] }}" target="_blank" rel="noopener" class="details-btn">Official Site</a>
  </div>
  {% endfor %}
</main>

<footer>
  <p>© 2025 Days2Event · All rights reserved</p>
</footer>

<script>
function toggleMenu() {
  const nav = document.getElementById("navMenu");
  nav.classList.toggle("show");
}

function showHome() {
  filterCards('all');
  setActiveLink(document.querySelector('a[data-filter="all"]'));
}

const navLinks = document.querySelectorAll("#navMenu a");
const cards = [...document.querySelectorAll(".event-card")];

function setActiveLink(activeLink) {
  navLinks.forEach(link => link.classList.remove("active"));
  if (activeLink) activeLink.classList.add("active");
}

function filterCards(filterType, filterValue) {
  let visibleCards = [];
  switch(filterType) {
    case 'all':
      visibleCards = cards;
      break;
    case 'multi-genre':
      visibleCards = cards.filter(card => card.dataset.multiGenre === 'yes');
      break;
    case 'genre':
      visibleCards = cards.filter(card => card.dataset.genre === filterValue);
      break;
    case 'artist':
      visibleCards = cards.filter(card => card.dataset.artist === filterValue);
      break;
    case 'region':
      visibleCards = cards.filter(card => card.dataset.region === filterValue);
      break;
    default:
      visibleCards = cards;
  }
  cards.forEach(card => card.style.display = "none");
  visibleCards.slice(0,4).forEach(card => card.style.display = "block");
}

navLinks.forEach(link => {
  link.addEventListener("click", e => {
    e.preventDefault();
    const filterType = e.target.dataset.filter;
    const filterValue = e.target.dataset.value;
    filterCards(filterType, filterValue);
    setActiveLink(e.target);

    const nav = document.getElementById("navMenu");
    if(nav.classList.contains("show")){
      nav.classList.remove("show");
    }
  });
});

// 탭 메뉴 로직
const tabs = document.querySelectorAll('.tab-btn');
const contents = document.querySelectorAll('.tab-content');

tabs.forEach(tab => {
  tab.addEventListener('click', () => {
    tabs.forEach(t => t.classList.remove('active'));
    tab.classList.add('active');

    contents.forEach(c => c.classList.remove('active'));
    document.getElementById(tab.dataset.tab).classList.add('active');
  });
});

// 카운트다운 버튼 및 지난 이벤트 숨기기
cards.forEach(card => {
  const btn = card.querySelector(".reveal-btn");
  const countdown = card.querySelector(".countdown");
  const dateStr = card.getAttribute("data-date");
  const targetDate = new Date(dateStr);
  const today = new Date();
  const oneDay = 1000 * 60 * 60 * 24;
  const daysLeft = Math.ceil((targetDate.setHours(0,0,0,0) - today.setHours(0,0,0,0)) / oneDay);

  if (daysLeft < 0) {
    card.style.display = "none";
  }

  btn.addEventListener("click", () => {
    countdown.querySelector("strong").textContent = daysLeft > 0
      ? `${daysLeft} days left`
      : daysLeft === 0
        ? `Today! 🎉`
        : `Passed 💤`;
    countdown.classList.remove("hidden");
    countdown.classList.add("reveal-animation");
    btn.style.display = "none";
    card.style.display = "block";
  });
});
</script>
{% endblock %}